// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RecipeItem renders differently with requested 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RecipeItem
    isModalOpen={false}
    recipe={
      Object {
        "category": "Mediterranean",
        "email": "haganb3@gmail.com",
        "id": "-LKsBjUcn-7KrbxFIlJa",
        "imageURL": "https://firebasestorage.googleapis.com/v0/b/recipes-cc787.appspot.com/o/images%2F3a92e118-0760-4bfc-92b6-d1176a1889d4.jpg?alt=media&token=f9e3c5e5-6766-41be-a35e-d026f1075826",
        "ingredients": Array [
          Object {
            "content": "butter",
            "id": 1535319837489,
          },
          Object {
            "content": "bread",
            "id": 1535319837488,
          },
          Object {
            "content": "cheese",
            "id": 1535319837487,
          },
        ],
        "link": undefined,
        "notes": undefined,
        "recipeTime": undefined,
        "steps": Array [
          Object {
            "content": "heat up",
            "id": 1535319837491,
          },
          Object {
            "content": "STIR",
            "id": 1535319837492,
          },
          Object {
            "content": "serve",
            "id": 1535319837493,
          },
        ],
        "time": 1535319939642,
        "title": "Roasted Butternut Squash Soup",
        "user": "Frank",
      }
    }
    removeID="-LKsBjUcn-7KrbxFIlJa"
    removeRecipe={[MockFunction]}
    toggleModal={[MockFunction]}
    user="Frank"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "-LKsBjUcn-7KrbxFIlJa",
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/RoastedButternutSquashSoup"
        >
          <div
            className="bgImage"
            style={
              Object {
                "backgroundImage": "url(https://firebasestorage.googleapis.com/v0/b/recipes-cc787.appspot.com/o/images%2F3a92e118-0760-4bfc-92b6-d1176a1889d4.jpg?alt=media&token=f9e3c5e5-6766-41be-a35e-d026f1075826)",
              }
            }
          />
          <h3
            className="category"
          >
            Mediterranean
          </h3>
          <div
            className="title-block"
          >
            <h3
              className="title"
            >
              Roasted Butternut Squash Soup
            </h3>
            <h4>
              by
              <span>
                Frank
              </span>
            </h4>
          </div>
        </Link>,
        <button
          className="remove"
          onClick={[Function]}
          type="button"
        >
          Remove Recipe
           
          <span
            className="up"
          >
            <ChevronDown
              color="#273762"
            />
          </span>
           
        </button>,
        <AnimateHeight
          animateOpacity={false}
          animationStateClasses={
            Object {
              "animating": "rah-animating",
              "animatingDown": "rah-animating--down",
              "animatingToHeightAuto": "rah-animating--to-height-auto",
              "animatingToHeightSpecific": "rah-animating--to-height-specific",
              "animatingToHeightZero": "rah-animating--to-height-zero",
              "animatingUp": "rah-animating--up",
              "static": "rah-static",
              "staticHeightAuto": "rah-static--height-auto",
              "staticHeightSpecific": "rah-static--height-specific",
              "staticHeightZero": "rah-static--height-zero",
            }
          }
          applyInlineTransitions={true}
          delay={0}
          duration={500}
          easing="ease"
          height={0}
          style={Object {}}
        >
          <div
            className="deleteDrop"
          >
            <p>
              Are you sure you want to Delete?
            </p>
            <p
              className="deleteButtons"
            >
              <button
                onClick={[Function]}
                type="button"
              >
                Delete
              </button>
              <button
                className="closeModal"
                onClick={[Function]}
                type="button"
              >
                Close
              </button>
            </p>
          </div>
        </AnimateHeight>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div
              className="bgImage"
              style={
                Object {
                  "backgroundImage": "url(https://firebasestorage.googleapis.com/v0/b/recipes-cc787.appspot.com/o/images%2F3a92e118-0760-4bfc-92b6-d1176a1889d4.jpg?alt=media&token=f9e3c5e5-6766-41be-a35e-d026f1075826)",
                }
              }
            />,
            <h3
              className="category"
            >
              Mediterranean
            </h3>,
            <div
              className="title-block"
            >
              <h3
                className="title"
              >
                Roasted Butternut Squash Soup
              </h3>
              <h4>
                by
                <span>
                  Frank
                </span>
              </h4>
            </div>,
          ],
          "replace": false,
          "to": "/RoastedButternutSquashSoup",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "bgImage",
              "style": Object {
                "backgroundImage": "url(https://firebasestorage.googleapis.com/v0/b/recipes-cc787.appspot.com/o/images%2F3a92e118-0760-4bfc-92b6-d1176a1889d4.jpg?alt=media&token=f9e3c5e5-6766-41be-a35e-d026f1075826)",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Mediterranean",
              "className": "category",
            },
            "ref": null,
            "rendered": "Mediterranean",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3
                  className="title"
                >
                  Roasted Butternut Squash Soup
                </h3>,
                <h4>
                  by
                  <span>
                    Frank
                  </span>
                </h4>,
              ],
              "className": "title-block",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Roasted Butternut Squash Soup",
                  "className": "title",
                },
                "ref": null,
                "rendered": "Roasted Butternut Squash Soup",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "by",
                    <span>
                      Frank
                    </span>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "by",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Frank",
                    },
                    "ref": null,
                    "rendered": "Frank",
                    "type": "span",
                  },
                ],
                "type": "h4",
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Remove Recipe",
            " ",
            <span
              className="up"
            >
              <ChevronDown
                color="#273762"
              />
            </span>,
            " ",
          ],
          "className": "remove",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": Array [
          "Remove Recipe",
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <ChevronDown
                color="#273762"
              />,
              "className": "up",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "color": "#273762",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "span",
          },
          " ",
        ],
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animateOpacity": false,
          "animationStateClasses": Object {
            "animating": "rah-animating",
            "animatingDown": "rah-animating--down",
            "animatingToHeightAuto": "rah-animating--to-height-auto",
            "animatingToHeightSpecific": "rah-animating--to-height-specific",
            "animatingToHeightZero": "rah-animating--to-height-zero",
            "animatingUp": "rah-animating--up",
            "static": "rah-static",
            "staticHeightAuto": "rah-static--height-auto",
            "staticHeightSpecific": "rah-static--height-specific",
            "staticHeightZero": "rah-static--height-zero",
          },
          "applyInlineTransitions": true,
          "children": <div
            className="deleteDrop"
          >
            <p>
              Are you sure you want to Delete?
            </p>
            <p
              className="deleteButtons"
            >
              <button
                onClick={[Function]}
                type="button"
              >
                Delete
              </button>
              <button
                className="closeModal"
                onClick={[Function]}
                type="button"
              >
                Close
              </button>
            </p>
          </div>,
          "delay": 0,
          "duration": 500,
          "easing": "ease",
          "height": 0,
          "style": Object {},
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                Are you sure you want to Delete?
              </p>,
              <p
                className="deleteButtons"
              >
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Delete
                </button>
                <button
                  className="closeModal"
                  onClick={[Function]}
                  type="button"
                >
                  Close
                </button>
              </p>,
            ],
            "className": "deleteDrop",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Are you sure you want to Delete?",
              },
              "ref": null,
              "rendered": "Are you sure you want to Delete?",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    onClick={[Function]}
                    type="button"
                  >
                    Delete
                  </button>,
                  <button
                    className="closeModal"
                    onClick={[Function]}
                    type="button"
                  >
                    Close
                  </button>,
                ],
                "className": "deleteButtons",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Delete",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Delete",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Close",
                    "className": "closeModal",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Close",
                  "type": "button",
                },
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "-LKsBjUcn-7KrbxFIlJa",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/RoastedButternutSquashSoup"
          >
            <div
              className="bgImage"
              style={
                Object {
                  "backgroundImage": "url(https://firebasestorage.googleapis.com/v0/b/recipes-cc787.appspot.com/o/images%2F3a92e118-0760-4bfc-92b6-d1176a1889d4.jpg?alt=media&token=f9e3c5e5-6766-41be-a35e-d026f1075826)",
                }
              }
            />
            <h3
              className="category"
            >
              Mediterranean
            </h3>
            <div
              className="title-block"
            >
              <h3
                className="title"
              >
                Roasted Butternut Squash Soup
              </h3>
              <h4>
                by
                <span>
                  Frank
                </span>
              </h4>
            </div>
          </Link>,
          <button
            className="remove"
            onClick={[Function]}
            type="button"
          >
            Remove Recipe
             
            <span
              className="up"
            >
              <ChevronDown
                color="#273762"
              />
            </span>
             
          </button>,
          <AnimateHeight
            animateOpacity={false}
            animationStateClasses={
              Object {
                "animating": "rah-animating",
                "animatingDown": "rah-animating--down",
                "animatingToHeightAuto": "rah-animating--to-height-auto",
                "animatingToHeightSpecific": "rah-animating--to-height-specific",
                "animatingToHeightZero": "rah-animating--to-height-zero",
                "animatingUp": "rah-animating--up",
                "static": "rah-static",
                "staticHeightAuto": "rah-static--height-auto",
                "staticHeightSpecific": "rah-static--height-specific",
                "staticHeightZero": "rah-static--height-zero",
              }
            }
            applyInlineTransitions={true}
            delay={0}
            duration={500}
            easing="ease"
            height={0}
            style={Object {}}
          >
            <div
              className="deleteDrop"
            >
              <p>
                Are you sure you want to Delete?
              </p>
              <p
                className="deleteButtons"
              >
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Delete
                </button>
                <button
                  className="closeModal"
                  onClick={[Function]}
                  type="button"
                >
                  Close
                </button>
              </p>
            </div>
          </AnimateHeight>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <div
                className="bgImage"
                style={
                  Object {
                    "backgroundImage": "url(https://firebasestorage.googleapis.com/v0/b/recipes-cc787.appspot.com/o/images%2F3a92e118-0760-4bfc-92b6-d1176a1889d4.jpg?alt=media&token=f9e3c5e5-6766-41be-a35e-d026f1075826)",
                  }
                }
              />,
              <h3
                className="category"
              >
                Mediterranean
              </h3>,
              <div
                className="title-block"
              >
                <h3
                  className="title"
                >
                  Roasted Butternut Squash Soup
                </h3>
                <h4>
                  by
                  <span>
                    Frank
                  </span>
                </h4>
              </div>,
            ],
            "replace": false,
            "to": "/RoastedButternutSquashSoup",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "bgImage",
                "style": Object {
                  "backgroundImage": "url(https://firebasestorage.googleapis.com/v0/b/recipes-cc787.appspot.com/o/images%2F3a92e118-0760-4bfc-92b6-d1176a1889d4.jpg?alt=media&token=f9e3c5e5-6766-41be-a35e-d026f1075826)",
                },
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Mediterranean",
                "className": "category",
              },
              "ref": null,
              "rendered": "Mediterranean",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3
                    className="title"
                  >
                    Roasted Butternut Squash Soup
                  </h3>,
                  <h4>
                    by
                    <span>
                      Frank
                    </span>
                  </h4>,
                ],
                "className": "title-block",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Roasted Butternut Squash Soup",
                    "className": "title",
                  },
                  "ref": null,
                  "rendered": "Roasted Butternut Squash Soup",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "by",
                      <span>
                        Frank
                      </span>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "by",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Frank",
                      },
                      "ref": null,
                      "rendered": "Frank",
                      "type": "span",
                    },
                  ],
                  "type": "h4",
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Remove Recipe",
              " ",
              <span
                className="up"
              >
                <ChevronDown
                  color="#273762"
                />
              </span>,
              " ",
            ],
            "className": "remove",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            "Remove Recipe",
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <ChevronDown
                  color="#273762"
                />,
                "className": "up",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "color": "#273762",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "span",
            },
            " ",
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animateOpacity": false,
            "animationStateClasses": Object {
              "animating": "rah-animating",
              "animatingDown": "rah-animating--down",
              "animatingToHeightAuto": "rah-animating--to-height-auto",
              "animatingToHeightSpecific": "rah-animating--to-height-specific",
              "animatingToHeightZero": "rah-animating--to-height-zero",
              "animatingUp": "rah-animating--up",
              "static": "rah-static",
              "staticHeightAuto": "rah-static--height-auto",
              "staticHeightSpecific": "rah-static--height-specific",
              "staticHeightZero": "rah-static--height-zero",
            },
            "applyInlineTransitions": true,
            "children": <div
              className="deleteDrop"
            >
              <p>
                Are you sure you want to Delete?
              </p>
              <p
                className="deleteButtons"
              >
                <button
                  onClick={[Function]}
                  type="button"
                >
                  Delete
                </button>
                <button
                  className="closeModal"
                  onClick={[Function]}
                  type="button"
                >
                  Close
                </button>
              </p>
            </div>,
            "delay": 0,
            "duration": 500,
            "easing": "ease",
            "height": 0,
            "style": Object {},
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p>
                  Are you sure you want to Delete?
                </p>,
                <p
                  className="deleteButtons"
                >
                  <button
                    onClick={[Function]}
                    type="button"
                  >
                    Delete
                  </button>
                  <button
                    className="closeModal"
                    onClick={[Function]}
                    type="button"
                  >
                    Close
                  </button>
                </p>,
              ],
              "className": "deleteDrop",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Are you sure you want to Delete?",
                },
                "ref": null,
                "rendered": "Are you sure you want to Delete?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <button
                      onClick={[Function]}
                      type="button"
                    >
                      Delete
                    </button>,
                    <button
                      className="closeModal"
                      onClick={[Function]}
                      type="button"
                    >
                      Close
                    </button>,
                  ],
                  "className": "deleteButtons",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Delete",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": "Delete",
                    "type": "button",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Close",
                      "className": "closeModal",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": "Close",
                    "type": "button",
                  },
                ],
                "type": "p",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
